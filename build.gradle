buildscript {
    ext {
        version = '0.3.3'
        description = 'Heroku add-ons utilities.'
        group = 'moe.pine'
        websiteUrl = 'https://github.com/pine/heroku-addons'
        gitUrl = 'https://github.com/pine/heroku-addons.git'

        junitVersion = '5.6.0'
        powermockVersion = '2.0.5'
    }
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'net.rdrei.android.buildtimetracker:gradle-plugin:0.11.0'
        classpath 'org.checkerframework:checkerframework-gradle-plugin:0.3.4'
    }
}

plugins {
  id 'com.github.spotbugs' version '5.0.13'
}


// ----- Project ------------------------------------------

apply plugin: 'java-library'
apply plugin: 'idea'

group rootProject.ext.group
version rootProject.ext.version
description rootProject.ext.description

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked'
    options.compilerArgs << '-Xlint:deprecation'
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.powermock:powermock-reflect:$powermockVersion"
}

test {
    useJUnitPlatform()
}


// ----- Build Time Tracker -------------------------------

apply plugin: 'build-time-tracker'

buildtimetracker {
    reporters {
        summary {
            ordered true
            barstyle 'ascii'
        }
    }
}


// ----- JaCoCo ---------------------------------------

apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.3'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


// ----- SpotBugs -------------------------------------

spotbugs {
    toolVersion = '4.7.3'
    excludeFilter = file("${project.rootDir}/findbugs-exclude.xml")
    spotbugsTest.enabled = false
}

spotbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}


// ----- Checker Framework ----------------------------

apply plugin: 'org.checkerframework'
checkerFramework {
    excludeTests = true

    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
        checkers = [
                'org.checkerframework.checker.nullness.NullnessChecker',
                'org.checkerframework.checker.units.UnitsChecker'
        ]
    }
}


// ----- Publish --------------------------------------

apply from: "${rootProject.projectDir}/gradle/sonatype.gradle"
